CREATE EXTENSION postgis_toaster;
CREATE TABLE test_postgis_toaster(a bytea STORAGE EXTERNAL TOASTER postgis_toaster,
                                  b text STORAGE PLAIN);
INSERT INTO test_postgis_toaster SELECT repeat('a', 10000)::bytea;
SELECT pg_column_size(a), pg_column_size(b) FROM test_postgis_toaster;
 pg_column_size | pg_column_size 
----------------+----------------
             72 |               
(1 row)

EXPLAIN(ANALYZE, BUFFERS, COSTS OFF, TIMING OFF, SUMMARY OFF)
SELECT substring(a, 1, 48) FROM test_postgis_toaster;
                        QUERY PLAN                        
----------------------------------------------------------
 Seq Scan on test_postgis_toaster (actual rows=1 loops=1)
   Buffers: shared hit=1
(2 rows)

SELECT substring(a, 1, 48) FROM test_postgis_toaster;
                                             substring                                              
----------------------------------------------------------------------------------------------------
 \x616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161
(1 row)

EXPLAIN(ANALYZE, BUFFERS, COSTS OFF, TIMING OFF, SUMMARY OFF)
SELECT substring(a, 1, 49) FROM test_postgis_toaster;
                        QUERY PLAN                        
----------------------------------------------------------
 Seq Scan on test_postgis_toaster (actual rows=1 loops=1)
   Buffers: shared hit=3
(2 rows)

SELECT substring(a, 1, 49) FROM test_postgis_toaster;
                                              substring                                               
------------------------------------------------------------------------------------------------------
 \x61616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161
(1 row)

UPDATE test_postgis_toaster SET b = repeat('b', 1800);
SELECT pg_column_size(a), pg_column_size(b) FROM test_postgis_toaster;
 pg_column_size | pg_column_size 
----------------+----------------
             72 |           1804
(1 row)

UPDATE test_postgis_toaster SET b = repeat('b', 1950);
SELECT pg_column_size(a), pg_column_size(b) FROM test_postgis_toaster;
 pg_column_size | pg_column_size 
----------------+----------------
             24 |           1954
(1 row)

UPDATE test_postgis_toaster SET b = repeat('b', 8100);
ERROR:  row is too big: size 8168, maximum size 8160
SELECT pg_column_size(a), pg_column_size(b) FROM test_postgis_toaster;
 pg_column_size | pg_column_size 
----------------+----------------
             24 |           1954
(1 row)

ALTER TABLE test_postgis_toaster ALTER COLUMN a SET STORAGE EXTENDED;
INSERT INTO test_postgis_toaster SELECT repeat('a', 1000000)::bytea;
EXPLAIN(ANALYZE, BUFFERS, COSTS OFF, TIMING OFF, SUMMARY OFF)
SELECT substring(a, 1, 48) FROM test_postgis_toaster;
                        QUERY PLAN                        
----------------------------------------------------------
 Seq Scan on test_postgis_toaster (actual rows=2 loops=1)
   Buffers: shared hit=4
 Planning:
   Buffers: shared hit=2
(4 rows)

SELECT substring(a, 1, 48) FROM test_postgis_toaster;
                                             substring                                              
----------------------------------------------------------------------------------------------------
 \x616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161
 \x616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161
(2 rows)

EXPLAIN(ANALYZE, BUFFERS, COSTS OFF, TIMING OFF, SUMMARY OFF)
SELECT substring(a, 1, 49) FROM test_postgis_toaster;
                        QUERY PLAN                        
----------------------------------------------------------
 Seq Scan on test_postgis_toaster (actual rows=2 loops=1)
   Buffers: shared hit=7
(2 rows)

SELECT substring(a, 1, 49) FROM test_postgis_toaster;
                                              substring                                               
------------------------------------------------------------------------------------------------------
 \x61616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161
 \x61616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161616161
(2 rows)

UPDATE test_postgis_toaster SET a = repeat('b', 1000000)::bytea;
UPDATE test_postgis_toaster SET a = repeat('b', 1000000)::bytea;
UPDATE test_postgis_toaster SET a = repeat('b', 1000000)::bytea;
UPDATE test_postgis_toaster SET a = repeat('b', 1000000)::bytea;
UPDATE test_postgis_toaster SET a = repeat('b', 1000000)::bytea;
UPDATE test_postgis_toaster SET a = repeat('b', 1000000)::bytea;
UPDATE test_postgis_toaster SET a = repeat('b', 1000000)::bytea;
UPDATE test_postgis_toaster SET a = repeat('b', 1000000)::bytea;
UPDATE test_postgis_toaster SET a = repeat('b', 1000000)::bytea;
UPDATE test_postgis_toaster SET a = repeat('b', 1000000)::bytea;
\d+
                                 List of relations
 Schema |         Name         | Type  | Owner | Persistence | Size  | Description 
--------+----------------------+-------+-------+-------------+-------+-------------
 public | test_postgis_toaster | table | qwer  | permanent   | 21 MB | 
(1 row)

VACUUM FULL test_postgis_toaster;
\d+
                                  List of relations
 Schema |         Name         | Type  | Owner | Persistence |  Size   | Description 
--------+----------------------+-------+-------+-------------+---------+-------------
 public | test_postgis_toaster | table | qwer  | permanent   | 2080 kB | 
(1 row)

DROP TABLE test_postgis_toaster;
